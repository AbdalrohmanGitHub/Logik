// In order to make the function parseTerm available, we need to load
// the term utilities form the library below. 
loadLibrary("termUtilities");  

// differentiate the term t with respect to the variable x
diff := procedure(t, x) {
    match (t) {
        case a + b :
            return diff(a, x) + diff(b, x);
        case a - b :
            return diff(a, x) - diff(b, x);
        case a * b :
            return diff(a, x) * b + a * diff(b, x);
        case a / b :
            return ( diff(a, x) * b - a * diff(b, x) ) / b * b;
        case a ** b :
            return diff( @exp(b * @ln(a)), x);
        case @ln(a) :
            return diff(a, x) / a;
        case @exp(a) :
            return diff(a, x) * @exp(a);
        case v | v == x :
            return 1;
        case y | isVariable(y) :  // must be different from x
            return 0;
        case n | isNumber(n):   
            return 0;  
     }
};

test := procedure(s) {
    t := parseTerm(s);
    v := parseTerm("x");
    d := diff(t, v);
    print("d/dx($s$) = $d$\n");
};

test("x");
test("y");
test("1");
test("x+x");
test("x+x+y");
test("x*x");
test("x/x");
test("1/x");
test("ln(x)");
test("exp(x)");
test("x ** x");

