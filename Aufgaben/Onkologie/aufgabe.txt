Aufgaben-Blatt}: Onkologie-Station

{Aufgabe 1:}
Auf einer Onkologie-Station liegen fünf Patienten in nebeneinander liegenden Zimmern.
Bis auf einen der Patienten hat jeder genau eine Zigaretten-Marke geraucht.
Der Patient, der nicht Zigarette geraucht hat, hat Pfeife geraucht.
Jeder Patient fährt genau ein Auto und ist
an genau einer Krebs-Art erkrankt. Zusätzlich haben Sie die folgenden Informationen:
\begin{enumerate}
\item Im Zimmer neben Michael wird Camel geraucht.
\item Der Trabant-Fahrer raucht Ernte 23 und liegt im Zimmer neben dem 
      Zungen-Krebs Patienten.
\item Rolf liegt im letzten Zimmer und hat Kehlkopf-Krebs.
\item Der West-Raucher liegt im ersten Zimmer.
\item Der Mazda-Fahrer hat Zungen-Krebs und liegt neben dem Trabant-Fahrer.
\item Der Nissan-Fahrer liegt neben dem Zungen-Krebs Patient.
\item Rudolf wünscht sich Sterbe-Hilfe und liegt zwischen dem Camel-Raucher und dem Trabant-Fahrer.
\item Der Seat Fahrer hat morgen seinen letzten Geburtstag.
\item Der Luckies Raucher liegt neben dem Patienten mit Lungen-Krebs.
\item Der Camel Raucher liegt neben dem Patienten mit Darm-Krebs.
\item Der Nissan Fahrer liegt neben dem Mazda-Fahrer
\item Der Mercedes-Fahrer raucht Pfeife und liegt neben dem Camel Raucher.
\item Jens liegt neben dem Luckies Raucher
\item Der Hodenkrebs-Patient hat gestern seine Eier durchs Klo gespült.
\item Welche Zigaretten-Marke raucht der Darmkrebs-Patient.
\item Welches Auto fährt Kurt?
\end{enumerate}
Entwickeln Sie ein Prolog-Programm, das die folgenden Fragen beantwortet:
\begin{enumerate}
\item Welche Zigaretten-Marke raucht der Darmkrebs-Patient?
\item Was fährt Kurt für ein Auto?
\end{enumerate}


{Aufgabe 2:}
Bearbeiten Sie die folgenden Aufgaben:
\begin{enumerate}
\item Schreiben sie ein Prädikat member, das der Typ-Spezifikation 

          member(+Number, +List(Number))

      entspricht. Der Aufruf $member(x, l)$ soll genau dann erfolgreich sein, 
      wenn die Zahl $x$ in der Liste $l$ auftritt.
\item Schreiben Sie ein Prädikat intersect das der Typ-Spezifikation   

      intersect(+List(Number), +List(Number), -List(Number))} 

      entspricht. Der Aufruf 

      $intersect(l_1, l_2, L)$ 
      soll für zwei Listen $l_1$ und $l_2$ eine Liste $l$ berechnen, die alle die Elemente
      enthält, die sowohl in $l_1$ als auch in $l_2$ auftreten.
\item Schreiben Sie ein Prädikat small, das mit der Typ-Spezifikation 
  
      small(+Number), +List(Number), -List(Number))

      verträglich ist. Der Aufruf 

      $small(x, l, S)$ 
 
      soll für eine Zahl $x$ und eine Liste von Zahlen $l$ die Liste aller der Zahlen
      aus $l$ berechnen, die kleiner oder gleich $x$ sind.
\item Schreiben Sie ein Prädikat big, das mit der Typ-Spezifikation 
  
      big(+Number), +List(Number), -List(Number))

      verträglich ist. Der Aufruf $big(x, l, S)$ 
      soll für eine Zahl $x$ und eine Liste von Zahlen $l$ die Liste aller der Zahlen
      aus $l$ berechnen, die größer als $x$ sind.
\item Schreiben Sie ein Prädikat {quick_sort}, das mit der Typ-Spezifikation 
  
      quick_sort(+List(Number), -List(Number))

      verträglich ist. Der Aufruf $quick_sort(l, L)$ 
      soll die Liste $l$ sortieren.
      Das Prädikat quick_sort soll nach der divide-and-conquer-Methode
      arbeiten:
      \begin{enumerate}
      \item Teilen Sie die zu sortierende Liste $l$ zunächst mit den Prädikaten
            small/3 und big/3 in zwei Listen $s$ und $b$ auf.
            Die Liste $s$ soll dabei alle Elemente enthalten, die kleiner als
            das erste Element der Liste $l$ sind, während die Liste $b$ die Elemente
            aus $l$ enthält, die größer als das erste Element von $l$ sind.
      \item Sortieren Sie die Listen $s$ und $b$.
      \item Fassen Sie die beiden sortierten Listen zu einer sortierten Liste
            zusammen. Benutzen Sie dazu das Prädikat concat aus der Vorlesung.
      \end{enumerate}
\end{enumerate}
