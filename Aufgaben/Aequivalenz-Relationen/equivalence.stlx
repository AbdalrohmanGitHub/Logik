// compute all equivalence relations on m
allEquivalences := procedure(m) {
    return { r in 2 ** m ** 2 | isEquivalence(r, m) };
};

// check whether the relation r is an equivalence relations on m
isEquivalence := procedure(r, m) {
    return isReflexive(r, m) && isSymmetric(r) && isTransitive(r);
};

// check whether the relation r is transitive
isTransitive := procedure(r) {
    return relationalProduct(r, r) <= r;
};

// check whether the relation r is symmetric
isSymmetric := procedure(r) {
    return forall ([x, y] in r | [y, x] in r);
};

// check whether the relation r is reflexive on m
isReflexive := procedure(r, m) {
    return forall (x in m | [x, x] in r);
};

// returns the relational product of r and q
relationalProduct := procedure(r, q) {
    // return { [a[1], b[2]] : a in r, b in q | a[2] == b[1] };
    return { [x, z] : [x, y] in r, [y, z] in q };
};

cartesianProduct := procedure(m, n) {
    return { [x, y] : x in m, y in n };
};

// test code
for (n in {1..4}) {
    a := allEquivalences({ 1 .. n });
    print("equivalence relations for n = $n$:");
    for (r in a) {
        print(r);
    }
    print("number of equivalence relations for n = $n$: $#a$\n");
}
