

Das 8-Damen-Problem


Das 8-Damen-Problem besteht darin, 8 Damen so auf dem Schach-Brett aufzustellen,
dass keine Dame eine andere Dame schlagen kann.
Unter 
 
http://www.ba-stuttgart.de/\symbol{126}stroetma/SETL2/queens-frame.stl

finden Sie ein Programm-Gerüst, in dem Sie die Lücken füllen sollen.


Hinweis: Immer, wenn Sie eine der in den
Aufgaben beschriebenen Prozeduren implementiert haben, sollten Sie diese
testen. Dazu kann sinnvoll sein, zunächst den Fall von drei Damen
auf einem Brett der Größe 3x3 zu betrachten, denn in diesem Fall bleibt die
Größe der berechneten Klauseln überschaubar. Hierzu ist Zeile 3 in der Datei
queens-frame.stl geeignet abzuändern. 

Aufgabe 1: Gegeben ist eine Menge $S$ von aussagenlogischen Variablen.
Implementieren Sie (in Zeile 63) eine
Prozedur atMostOne(), so dass der Aufruf 
 $atMostOne(S)$ 
eine Menge $K$ von Klauseln ausrechnet. Die Konjunktion der Klauseln aus $K$
soll genau dann wahr sein, wenn höchstens eine der Variablen aus $S$
den Wert true hat. 

Aufgabe 2: 
Es seien die folgenden Objekte gegeben:
\begin{enumerate}
\item board repräsentiert ein Schach-Brett. 
\item $column \in \{1,...,8\}$ spezifiziert eine Spalte auf dem Schach-Brett.
\end{enumerate}
Implementieren sie (in Zeile 70) eine Prozedur atMostOneInColumn,
so dass der Aufruf 
 atMostOneInColumn(board, column) 
eine Menge von Klauseln $K$ berechnet. Die Konjunktion der Klauseln aus $K$
soll genau dann wahr sein, wenn in der mit column spezifizierten Reihe
höchstens eine Dame steht. 

Aufgabe 3: 
Es seien die folgenden Objekte gegeben:
\begin{enumerate}
\item board repräsentiert ein Schach-Brett. 
\item $k \in \{3,...,15\}$ spezifiziert über die Gleichung 
  $row + column = k$

 eine aufsteigende Diagonale auf dem Schach-Brett.
\end{enumerate}
Implementieren sie (in Zeile 80) eine Prozedur
atMostOneInUpperDiagonal, so dass der Aufruf 
 atMostOneInUpperDiagonal(board, k) 
eine Menge von Klauseln $K$ berechnet. Die Konjunktion der Klauseln aus $K$
soll genau dann wahr sein, wenn in der durch k spezifizierten
aufsteigenden Diagonalen höchstens eine Dame steht. 

Aufgabe 4: 
Es seien die folgenden Objekte gegeben:
\begin{enumerate}
\item board repräsentiert ein Schach-Brett. 
\item $k \in \{-7,...,7\}$ spezifiziert über die Gleichung
  $row - column = k$

 eine absteigende Diagonale auf dem Schach-Brett.
\end{enumerate}
Implementieren sie (in Zeile 90) eine Prozedur
atMostOneInLowerDiagonal, so dass
der Aufruf 
 atMostOneInLowerDiagonal(board, k) 
eine Menge von Klauseln $K$ berechnet. Die Konjunktion der Klauseln aus $K$
soll genau dann wahr sein, wenn in der durch k spezifizierten
absteigenden Diagonalen höchstens eine Dame steht. 

Aufgabe 5: 
Es seien die folgenden Objekte gegeben:
\begin{enumerate}
\item board repräsentiert ein Schach-Brett. 
\item $row \in \{1,...,8\}$ spezifiziert eine Reihe auf dem Schach-Brett.
\end{enumerate}
Implementieren sie (in Zeile 99) eine Prozedur oneInRow, so dass
der Aufruf 
 oneInRow(board, row) 
eine Menge von Klauseln $K$ berechnet. Die Konjunktion der Klauseln aus $K$
soll genau dann wahr sein, wenn in der durch row spezifizierten Reihe
mindestens eine Dame steht. 

Aufgabe 6: 
Wieder repräsentiert board ein Schach-Brett.
Implementieren sie (in Zeile 125) eine Prozedur allClauses, so dass
der Aufruf 
 allClauses(board) 
eine Menge von Klauseln $K$ berechnet. Die Konjunktion der Klauseln aus $K$ 
soll genau dann wahr sein, wenn das durch board repräsentierte
Schach-Brett das 8-Damen-Problem löst.

