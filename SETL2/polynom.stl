program main;

    P1 := { [3,1], [1,0] };
    P2 := { [4,1], [2,0] };

    print("toString( ", P1, " ) = ", toString(P1));
    print("toString( ", P2, " ) = ", toString(P2));
    print("sum( ", toString(P1), ", ", toString(P2), " ) = ", toString(sum(P1,P2)));
    print("prod( ", toString(P1), ", ", toString(P2), " ) = ", toString(prod(P1,P2)));
    print("eval( ", toString(P1), ", ", 3, " ) = ", eval(P1,3));

    L := [1,1,0];
    print("value(",L,") = ", value(L));

    -- Berechnet den höchsten Koeffizienten eine Polynoms.
    procedure grad(P);
        return 0 max/ { n : [c, n] in P | c /= 0 };
    end grad;

    procedure sum(P1, P2);
        S1  := { [c, i] in P1 | { [d, j] in P2 | i = j } = {} };
        S2  := { [c, i] in P2 | { [d, j] in P1 | i = j } = {} };
        S12 := { [c1 + c2, i] : [c1, i] in P1, [c2, j] in P2 | i = j };
        return S1 + S2 + S12;
    end sum;

    procedure prod(P1, P2);
        return { [ 0 +/ { c1 * c2 : [c1, n1] in P1, [c2, n2] in P2 | n1 + n2 = n }, n ] : n in { 0 .. grad(P1) + grad(P2) } };
    end prod;

    procedure toString(P);
        result := "";
        for [c, n] in P loop
            if #result = 0 then
                result := result + c + " * x ** " + n;
            else 
                result := result + " + " + c + " * x ** " + n;
            end if;
        end loop;
        return result;
    end toString;

    procedure eval(P, x);
        return +/ { c * x ** n : [c, n] in P };
    end eval;

    procedure value(L);
        return +/ { L(i) * 2 ** (#L-i) : i in { 1 .. #L } };
    end value;
end main;