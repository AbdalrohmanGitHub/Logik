program main;

    -- D gives the distance between two points
    D := { [ [1,2], 2 ], [ [2,3], 1], [ [1,3], 4 ], [ [2,4], 7], [ [4,5], 1 ] };

    print("computing shortest path map");
    D := shorted_path(D);
    print("D = ", D);

    -- The procedure call closure(R) computes the transitive closure
    -- of the binary relation R.

    procedure shorted_path(D);
        loop
            Old_D := D;
            D     := iterate(D);
            if D = Old_D then
                return D;
            end if;
        end loop;
    end shorted_path;

    -- The procedure call product(R1, R2) computes the relational
    -- product of the binary relations R1 and R2. 

    procedure iterate(D);
        M := { [ [x,z], d1 + d2 ] : 
               [ [x,y1], d1 ] in D, [ [y2,z], d2 ] in D | y1 = y2 };
        D := comp_min(D + M);
        return D;
    end iterate;

    -- The procedure call comp_min(M) turns the multimap M into a simple map by
    -- replacing multiple values by their minimum.

    procedure comp_min(M);
        return { [x, min/ M{x}] : x in domain(M) };
    end comp_min;

end main;
