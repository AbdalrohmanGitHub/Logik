program main;
    M := { 1, 2 };
    N := { "a", "b", "c" };

    for f in allFunctions(M, N) loop
        print(f);
    end loop;

    -- Compute the set M ** N of all functions from the set M to the set N.
    -- Both M and N are assumed to be non-empty.
    procedure allFunctions(M, N);
        M_List := [ x : x in M ];
        N_List := [ y : y in N ];
        return { { [ M_List(i), L(i) ] : i in [ 1 .. #M  ] } : L in generateLists(#M, N_List) };
    end allFunctions;

    -- This function computes the set of all lists of length m with elements
    -- from the set N.  The algorithm works by induction on m.
    procedure generateLists(m, N);
        if m = 0 then
            return { [] };
        end if;
        return  { [ x ] + l : x in N, l in generateLists(m - 1, N) };
    end generateLists;

end main;

