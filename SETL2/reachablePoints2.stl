program main;
  G := { [[1,2], 2], [[ 2,3], 1], [[1,3], 4], [[2,4], 7 ], [[4,5], 1], [[6,7],1], [[5,1], 2] }; 
  M := {1, 5};

 print("Startpunkt eingeben: ");
 -- read(x);
 x := 1;
 F := oneStep2(x, G);
 print ("Ausgangsmenge G = ", G);  
 print ("reachable2 = ", reachable2(x, G));
 
procedure oneStep2(x, R);
    return {[y, [u, y], l] : [[u, y], l] in R | u = x}; 
end oneStep2;

procedure oneStepSet2(F, R);
--    return {[z, [z] + p, l1 + l2] : [u, p, l1] in F, [[y, z], l2] in R | u = y};
    return {[z, p + [z], l1 + l2] : [u, p, l1] in F, [[y, z], l2] in R | u = y};
end oneStepSet2;

procedure reachable2(x, R);
    M := oneStep2(x, R);
    loop
        old_M := M;
        M     := minimize(M + oneStepSet2(M, R));
        if M = old_M then
            return M;
        end if;
    end loop;
end reachable2;

procedure minimize(F);
    return {[y1, p1, l1] in F | l1 = min/ {l:[y, p, l] in F | y = y1}};
end minimize;

end main;