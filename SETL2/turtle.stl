-- Turtle graphic, reminiscent of old Apple computer
program turtle;

    RIGHT := {["NORTH","EAST"], ["EAST","SOUTH"], ["SOUTH","WEST"], ["WEST","NORTH"]};

    -- The map giving the direction to the left of any direction is obviously
    -- the inverse of the -right- map.
    LEFT := {[d1,d2]: [d2,d1] in right};
    -- initialize an empty picture
    picture := [ 52 * "_" ] + 50 * ["|" + 50 * " " + "|"] + [ 52 * "^" ];        
    -- Initially the turtle is at the lower left-hand of the picture, facing north.
    direction := "NORTH";
    row := 50;
    column := 1;
    tracing := false;    -- initially, the turtle's pen is up

    -- Main loop of the interpreter
    loop 
        read(command);
        case command
            when "RIGHT"       => direction := right(direction);
            when "LEFT"        => direction := left(direction);
            when "PEN_UP"      => tracing := false;
            when "PEN_DOWN"    => tracing := true;
            when "DRAW", "END" =>
                for line in picture loop
                    print(line);    -- draw 50 lines, to make 1 picture
                end loop;
                -- start over, with a new  empty picture
                picture := [ 52 * "_" ] + 50 * ["|" + 50 * " " + "|"] + [ 52 * "^" ];        
                if  command = "END" then 
                    stop; 
                end if;
            when "FORWARD" => 
                read(distance);
                case direction
                    when "NORTH" =>                         -- note the new turtle position
                        new_row := (row - distance) max 1;
                        new_col := column;        
                    when "EAST"  =>                         -- note the new turtle position
                        new_col := (column + distance) min 50;
                        new_row := row;        
                    when "WEST"  =>                         -- note the new turtle position
                        new_col := (column - distance) max 1;
                        new_row := row;        
                    when"SOUTH" =>                          -- note the new turtle position
                        new_row := (row + distance) min 50;
                        new_col := column;        
                end case;
                if  tracing then
                    if  new_row = row then
                        -- Find first and last column needed for tracing
                        min_col := column min new_col;
                        max_col := column max new_col;
                        -- Draw the line:
                        picture(row + 1)(min_col+1..max_col+1) := (distance + 1) * "*";
                    else
                        -- Find first and last row.
                        min_row := row min new_row;
                        max_row := row max new_row;

                        for r in [min_row..max_row] loop
                            picture(r+1)(column+1) := "*";
                        end loop;
                    end if;
                end if;
                -- now update the turtle position
                row    := new_row;        
                column := new_col;
            otherwise  => print("INVALID COMMAND:", COMMAND);
        end case;
    end loop;
end turtle;
