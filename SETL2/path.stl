program main;
    R := { [1,2], [2,3], [1,3], [2,4], [4,5] };
    print( "R = ", R );
    print( "computing all pathes" );
    P := closure(R);
    print( "P = ", P );
    
    -- The procedure call closure(R) computes the transitive closure
    -- of the binary relation R.
    procedure closure(R);
        P := R;
        loop
            Old_P := P;
            P     := R + path_product(R, P);
            print(P);
            if P = Old_P then
                return P;
            end if;
        end loop;
    end closure;

    -- The procedure call product(P, Q) computes the path product P * Q.
    procedure path_product(P, Q);
        return { add(p, q) : p in P, q in Q | p(#p) = q(1) };
    end path_product;    

    -- The product call add(p,q) computes the sum of the lists p and q.
    -- The last point of p has to be the first point of q.
    procedure add(p, q);
        return p + q(2..);
    end add;

end main;

