program main;
    Suits  := { "c", "h", "d", "s" };
    Values := { "2", "3", "4", "5", "6", "7", "8", "9", "T", "J", "Q", "K", "A" }; 
    Deck   := { [ v, s ] : v in Values, s in Suits };

    Hole   := { [ "3", "c" ], [ "3", "s" ] };
    Rest   := Deck - Hole;
    Flops  := { { k1, k2, k3 } : k1 in Rest, k2 in Rest, k3 in Rest | #{ k1, k2, k3 } = 3 };
    Trips  := { f in Flops | [ "3", "d" ] in f or [ "3", "h" ] in f };
    print(#Flops);

    p      := 1.0 * #Trips / #Flops;
    print("Wahrscheinlichkeit dafür, im Flop ein Paar zu vervollständigen: ", p);
    print("Odds: ", (1-p)/p);

    Hole    := { [ "A", "c" ], [ "T", "c" ] };
    Rest    := Deck - Hole;
    Flops   := { { k1, k2, k3 } : k1 in Rest, k2 in Rest, k3 in Rest | #{ k1, k2, k3 } = 3 };
    Flushes := { f in Flops | numberClubs(f) = 3 };
    print(#Flushes);

    p      := 1.0 * #Flushes / #Flops;
    print("Wahrscheinlichkeit dafür, im Flop einen Flush zu machen: ", p);
    print("Odds: ", (1-p)/p);

    Flops   := { { k1, k2, k3 } : k1 in Rest, k2 in Rest, k3 in Rest | #{ k1, k2, k3 } = 3 };
    Flushes := { f in Flops | numberClubs(f) >= 2 };
    print(#Flushes);

    p      := 1.0 * #Flushes / #Flops;
    print("Wahrscheinlichkeit dafür, im Flop einen 4-Flush oder Flush zu machen: ", p);
    print("Odds: ", (1-p)/p);


    procedure numberClubs(flop);
        return #{ card in flop | card(2) = "c" };
    end numberClubs;

end main;